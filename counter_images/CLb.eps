%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (CLb.eps)
%%CreationDate: (2018-07-28T23:59:34+00:00)
%%BoundingBox: -0 -0 45 45
%%HiResBoundingBox: 0 0 45 45
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 45 45
userdict begin
DisplayImage
0 0
45 45
12
45 45
1
0
0
16
FFFFFF
EFF7E7
CECEE7
ADB5B5
ADADFF
A5A5E7
9C9C94
84846B
7384E7
6363DE
524AAD
42425A
394231
31317B
101021
000000
0909090909090909090909090909090909090909090909090909090909090909090909090909
0909090909090909090909090909090909090909090909090909090909090909090909090909
0909090909090909090909090909090909090909090909090909090909090909090909090909
09090909090909090909090909090909090909090909090909090A0D0D0D090909090F090909
09090909090909090909090909090909090909090909090909090909090909090D0F0F0F0F0F
09090D0F0D090909090909090909090909090909090909090909090909090909090909090909
0D0F0F09090F0F09090D0F0D0909090909090909090909090909090909090909090909090909
090909090909090F0F090909090909090D0F0D09090909090909090909090909090909090909
09090909090909090909090909090F0F090909090909090D0F0D090909090909090909090909
0909090909090909090909090909090909090909090F0F0909090E0F09090D0F0D0909090909
090909090909090909020909090909090909090909090909090909090B0F0F09090F0F09090D
0F0C0D0D09090909090909090908040207020208090909090909090909090909090909090D0F
0F0F0F0B09090D0F0F0F0F09090909090909090802070E0B0E07020809090909090909090909
0909090909090A0D0D0D0909090A0D0D0D0D0909090909090908030E070100010B0B02080909
0909090909090909090909090909090909090909090909090909090909090909030702000000
0000070B02080909090909090909090909090909090909090909090909090909090909090909
020B06000701060106000B0C0109090909090909090909090909090909090909090909090909
09090909090905030C00010E0707070E00020F03050909090909090909090909030303030303
03030303030303030909090909020C0B0607060200020606060C0C0009090909090909090909
0903000000000000000000000000030909090905060C03060200000000000306070E03050909
0909090909090909030000000000000000000000000309090909020707020306010000010102
03070C070209090909090909090909030000000000000000000000000309090909020707070B
0E010000000206070C0C07020909090909090909090903000000000000000000000000030909
090902070702020201030703010106070C070209090909090909090909030000000000000000
00000000030909090905030C00000307070206070307070C0304090909090909090909090300
0000000000000000000000030909090909020B0C0B0601030C07030B0B0C0B02090909090909
09090909090300000000000000000000000003090909090909050B0C03070B020E0B070E0B05
09090909090909090909090903000000000000000000000000030909090909090803070E0F01
00060F0E07050909090909090909090909090903000000000000000000000000030909090909
09090902070B0100020B03020908090909090909090909090909030000000000000000000000
0003090909090909090806070000000001070308090909090909090909090909090300000000
00000000000000000309090909090905070B000000000000030C030509090909090909090909
09090303030303030303030303030303090909090904060C0202000000000102030E03050909
09090909090909090909090909090909090909090909090909090909020C0300020606060607
01000B0B02090909090909090909090909090909090909090909090909090909090905060B03
020706060606060200070E030509090909090909090909090909090909090909090909090909
09090902070700060300000700000706060C0702090909090909090909090909090909090909
09090909090909090909020707000301000B0B0B010607060C07040909090909090909090909
0909090909090909090909090909090909020707000301020E020E010606060E070209090909
09090909090909090909090909090909090909090909090902070700060200030E0300060706
0C07020909090909090909090909090909090909090909090909090909090904070702030601
010100010607070C070409090909090909090909090909090909090909090909090909090909
08020E0300030B0707070703070B0E0208090909090909090909090909090909090909090909
090909090909090902070B0102000100010207070E0702090909090909090909090909090909
09090909090909090909090909090908020B0B030302020307070E0B02090909090909090909
09090909090909090909090909090909090909090909090802070C0C0C0C0B0B0B0702090909
0909090909090909090909090909090909090909090909090909090909090909050207070707
0702040909090909090909090909090909090909090909090909090909090909090909090909
0909080404020204090909090909090909090909090909090909090909090909090909090909
0909090909090909090909090909090909090909090909090909090909090909090909090909
0909090909090909090909090909090909090909090909090909090909090909090909090909
0909090909090909090909090909090909090909090909090909090909090909090909090909
0909090909090909090909090909090909090909090909090909090909090909090909090909
0909090909090909090909

end
%%PageTrailer
%%Trailer
%%EOF
