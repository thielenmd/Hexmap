%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (EXb.eps)
%%CreationDate: (2018-07-28T23:59:34+00:00)
%%BoundingBox: -0 -0 45 45
%%HiResBoundingBox: 0 0 45 45
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 45 45
userdict begin
DisplayImage
0 0
45 45
12
45 45
1
0
0
16
FFFFFF
DEDED6
ADADFF
ADADAD
949CC6
9494E7
848C84
7363EF
6B63DE
5A52B5
52526B
424A42
29296B
101829
000021
000000
0707070707070707070707070707070707070707070707070707070707070707070707070707
0707070707070707070707070707070707070707070707070707070707070707070707070707
0707070707070707070707070707070707070707070707070707070707070707070707070707
0707070707070707070707070707070707070707070707070E0F0F0E0F0F07070D0F0707070C
0F0907070707070707070707070707070707070707070707070707070707070F0F0F0F0F0F07
070C0F0D070A0F0C070707070707070707070707070707070707070707070707070707070707
0E0F0C0707070707080C0F0D0F0F0C0707070707070707070707070707070707070707070707
070707070707070F0F0F0E0F0D070707090F0F0F0C0707070707070707070707070707070707
07070707070707070707070707070F0F0F0F0F0D070707070F0F0F0707070707070707070707
0707070707070707070707070707070707070707070E0F0C0707070707090C0F0D0F0F070707
070707070707070707070707070707070707070707070707070707070F0F0F0F0E0F07070F0F
0C07090F0F0807070707070707070707070707070707070707070707070707070707070D0F0E
0E0F0E07070E0C070707090E0C07070707070707070707070707070707070707070707070707
0707070707070707070707070707070707070707070707070707070707070707070707070707
0707070707070707070707070707070707070707070707070707070707070707070707070707
0707070707070707070707070707070707070303030303030303030303030303070707070707
0707070707070707070707070707070707070707070707070703000000000000000000000000
0307070707070707070707070707070707070707070707070707070707070707030000000000
0000000000000003070707070707070707070707070707070707070707070707070707070707
0703000000000000000000000000030707070707070707070707070707070707070707070707
0707070707070707030000000000000000000000000307070707070707070707070707070707
0707070707070707070707070707070300000000000000000000000003070707070707070707
0707070707070707070707070707070707070707070703000000000000000000000000030707
0707070707070707070707070707070707070707070707070707070707030000000000000000
0000000003070707070707070707070707070707070707070707070707070707070707070300
0000000000000000000000030707070707070707070707070707070707070707070707070707
0707070707030000000000000000000000000307070707070707070707070707070707070707
0707070707070707070707070300000000000000000000000003070707070707070707070707
0707070707070707070707070707070707070703000000000000000000000000030707070707
0707070707070707070701010807070707070707070707070707030000000000000000000000
00030707070707070707070707070707010B0B01070707070707070707070707070303030303
03030303030303030307070707070707070707070707010A03060B0407070707070707070707
07070707070707070707070707070707070707070707070707070707000B0300000B0A050707
0707070707070707070707070707070707070707070707070707070707070707070705030B00
0000010B01070707070707070707070707070707070707070707070707070707070707070707
070707000B03030303030A030507070707070707070707070707070707070707070707070707
07070707070707070705030B00030303030A0B01070707070707070707070707070707070707
07070707070707070707070707070707010A060000000000060D010707070707070707070707
0707070707070707070707070707070707070707070707010A0A0003030306060D0007070707
07070707070707070707070707070707070707070707070707070707070705030B000303030A
0A0B010707070707070707070707070707070707070707070707070707070707070707070707
010B03000003060B030407070707070707070707070707070707070707070707070707070707
0707070707070705030B010106060B0107070707070707070707070707070707070707070707
07070707070707070707070707070701060F06060F0605070707070707070707070707070707
070707070707070707070707070707070707070707070701060D0D0602070707070707070707
0707070707070707070707070707070707070707070707070707070707070701000000080707
0707070707070707070707070707070707070707070707070707070707070707070707070707
0707070707070707070707070707070707070707070707070707070707070707070707070707
0707070707070707070707070707070707070707070707070707070707070707070707070707
0707070707070707070707070707070707070707070707070707070707070707070707070707
0707070707070707070707070707070707070707070707070707070707070707070707070707
0707070707070707070707070707070707070707070707070707070707070707070707070707
0707070707070707070707070707070707070707070707070707070707070707070707070707
0707070707070707070707

end
%%PageTrailer
%%Trailer
%%EOF
