%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (Fighterr.eps)
%%CreationDate: (2018-07-28T23:59:34+00:00)
%%BoundingBox: -0 -0 45 44
%%HiResBoundingBox: 0 0 45 44
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 45 44
userdict begin
DisplayImage
0 0
45 44
12
45 44
1
0
0
256
FFFFFF
FFFFFF
FFFFF7
FFEFF7
F7F7E7
F7EFF7
EFF7E7
EFEFE7
E7E7F7
E7E7EF
E7E7E7
E7E7DE
E7E7CE
E7CEDE
E7CED6
E7B5CE
DEE7E7
DEDEDE
DEDED6
DED6DE
DED6D6
DECED6
DEC6CE
DEB5CE
D6DEEF
D6DEDE
D6D6CE
D6D6C6
D6C6CE
D6BDCE
D6B5C6
D6A5C6
D6A5BD
D69CBD
D69CB5
D694B5
D68CAD
D68CAD
D62942
D62939
CECEEF
CECECE
CEC6EF
CEC6EF
CEC6C6
CEB5C6
CEA5BD
CE9CB5
CE94B5
CE94AD
CE8CAD
CE7BA5
CE7B9C
CE739C
CE6B94
CE5A84
CE5A7B
CE5273
CE4A6B
CE426B
CE4263
CE395A
CE3952
CE3152
CE314A
CE3142
CE294A
CE2942
CE2942
C6C6BD
C69CB5
C68CAD
C684A5
C67B9C
C66B8C
C6638C
C66384
C65A84
C65A7B
C6527B
C65273
C64A73
C64A6B
C6426B
C64263
C6395A
C63152
C6314A
BDBDBD
BDBDB5
BDB5BD
BD8CAD
BD8CA5
BD6B8C
BD638C
BD6384
BD5A84
BD527B
BD5273
BD4A73
BD395A
BD315A
B5B5BD
B5B5B5
B5B5AD
B5A5AD
B59CAD
B594A5
B5849C
B57B9C
B55A7B
B5527B
B5315A
ADADAD
ADADA5
ADA5A5
AD9CA5
AD94A5
AD949C
AD849C
AD7B94
AD3163
AD315A
A5A5A5
A5A59C
A5949C
A58C9C
A56B8C
A53163
9C9C9C
9C9C94
9C9494
9C8C94
9C7B8C
94949C
949494
948C8C
8C8C8C
84847B
84396B
84316B
7B847B
7B7B84
7B7B7B
7B7B73
7B7373
7B6B73
7B3173
7B2973
737B73
737B6B
737B6B
737384
73737B
737373
73736B
736B73
736B6B
73636B
733173
6B6B73
6B6B6B
6B6B63
6B636B
6B6363
6B3173
6B2973
636B6B
636B5A
63636B
636363
63635A
635A63
635A5A
633973
633173
5A5A6B
5A5A63
5A5A5A
5A5A52
5A3173
525A5A
525A52
525A4A
52525A
525252
52524A
52396B
523173
52316B
4A5252
4A524A
4A5239
4A4A4A
4A4A42
4A4A39
4A4252
4A4239
4A396B
4A316B
42424A
424242
424239
424231
423942
42316B
394239
393973
393963
39394A
393942
393939
393929
393152
393142
31316B
313131
313121
312963
293121
292931
292921
292142
212952
21214A
212142
212142
212118
18215A
182121
182118
18186B
18184A
181818
101810
101808
101029
101021
101008
081008
080839
080821
080818
080810
080031
000831
000808
000031
000029
000021
000018
000010
000008
000000
000000
000000
4240404042272742402727423D27643D40404042402742274227262727272742404042272727
2642274027422727272727272727272727272727272727272727272727272727272727272727
2727272727272727272727272727272727274040424027272727272727272727272727272727
27272727272727272727272727272727272727272727272794F1F1F0F1F1273DC6A527272727
272727272727272727272727613A2727272727272727272727272727272727B4FFFFDFDFDE27
DFFFEC64274079797A7A27272727272727275D76816127272727272727272727272727272727
A5FFFFCF2727D0F2F2FFF027B4FFF2F2E440272727272727158FB2C38A372727272727272727
27272727272727A5FFFFFFFFF227E7F2EC8B27C6FFFFE4642727272727275D178FA1D18F2D3A
2727272727272727272727272727A5FFF2C6A59340A5FFDE2727B4FFF0642727272727272717
C106C1C111686D2727272727272727272727272727C6FFF127272727D0FFDE2727B4FFF04027
27272727273D8FE696A1A1ACC1172727272727272727272727272727C6FFF1272727278BFFE9
B427C6FFF1642727272727273D89A8699DACC3C12E422727272727272727272727272779B493
272727272679C6A62764CF9327272727272727273A76C1C3D4D46D2727272727272727272727
272727272727272727272727272727272727272727272727272727273871968F694027272727
2727272727272727272727272727272727272727272727272727272727272727272727273A34
343A27272727272727272727272727272727274040402727402627422727424027272727272F
2E422727272727272727272727422E342727272727272727273D2E28282828282828282F2F31
2F3A27273D5BA8AD6A422727272727272727273D6AAC9D4A27272727272727273A0B00000000
040004000400000B6127420396A1B29617272727272727272742049D9DA1074A272727272727
27630B00040400000000000000000B79406C8158C1DD2D1A61272727272727272D8158CCAC29
8138272727272727630B00000000000000000000001A382785EB45928F45BF5B272727272727
6471FF458FA1BF962F272727272727610B0000000000000400000004074027A1A892D1D1D3BF
1A2727272727273296A18FD1DDB2E911422727272727630B0000000000000000000000113A27
7F9258818FBEAC342727272727273D779D718184D19D34272727272727610B00040000040000
000400000B7927272FBEE6E9B23427272727272727272732B2E9E6743727272727272727630B
00000000000000000000000C612740422F15102F27272727272727272727272F101561272727
2727272727610B00000000000000000000000B61402727274040422727272761612727272727
273D40272727272727272727791000000000000400000400000B612727272727272727272761
716A5127272727272727272727272727272727610B00040000000000000000000B3A27272727
27272727272F88B2D381512727272727272727272727272727273A1000000004000000000000
060C6127272727272727275D168FA1C1962D3D27272727272727272727272727276418100818
07180B10101010081161272727272727272729C10BC1C111685B272727272727272727272727
27274061616363633A3A3A3A3A3A646127272727272727273A8EE396A1A0B2BF2E2727272727
272727272727272727272727272727272727272727272727272727272727273A928F58B2B2C1
D11A272727272727272727272727272727272727272727272727272727272727272727272727
276084A1B2C1D3773D2727272727272727272727272727272727272727272727272727272727
2727272727613A27273876968F6A3D272727272E322727272727272727272727272727272727
2727272727272727272727387C743A2727632F323A272727272FC1A161272727272727272727
27272727272727272727272727272727276171D3DB782727272727272727271F8FA1A8153A27
27272727272727272727272727272727272727272727276403A096C18F342727272727272760
168DA8AD115B3D27272727272727272727272727272727272727272727272EBE1AB0B27C8136
27272727274071DD2EA1B0B28D3227272727272727272727272727272727272727272727618D
EC8FA1A1A8D11F27272727273396A896D5DCC0E6152727272727272727272727272727272727
2727272727348F8D58B0B2C3E91540272727273D74C10B5868C3B23227272727272727272727
272727272727272727272727422FA8764581C371602727272727276374C3C0DBB22F27272727
2727272727272727272727272727272727272727402FBEEBEB9D5127272727272727273874A1
8D32272727272727272727272727272727272727272727272727272727515D4A3A2727272727
2727272727273A3A272727272727272727272727272727272727272727272727272727272727
2727272727272727272727272727272727272727272727272727272727272727272727272727
2727272727272727272727272727272727272727272727272727272727272727272727272727
2727272727272727272727272727272727272727272727272727272727272727272727272727
2727272727272727272727272727272727272727272727272727272727272727272727272727
27272727

end
%%PageTrailer
%%Trailer
%%EOF
