%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (EXr.eps)
%%CreationDate: (2018-07-28T23:59:34+00:00)
%%BoundingBox: -0 -0 45 45
%%HiResBoundingBox: 0 0 45 45
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 45 45
userdict begin
DisplayImage
0 0
45 45
12
45 45
1
0
0
16
FFFFFF
EFEFE7
C6425A
D62131
CE2931
BDBDE7
BDBDB5
AD2929
A59CA5
A5525A
7B7B7B
5A5A5A
4A2929
29294A
000818
000000
0404040403030303040303030303040403030404030304040303030303030303030303030303
0303030303030304040404040403040404030304030303030404030303030303030303030303
0303030303030403030303030303030303030303030303030304040403030303030303030303
0303030303030303030303030303030303030303030303030E0E0E0E0E0F03030E0E03030303
0E0E03030303030303030303030303030303030303030303030303030403030E0E0E0E0E0F03
030C0F0E03030F0D030403030303030303030303030303030303030303030303030303040303
0E0F030303030303040D0E0E0F0F070204030303030303030303030303030303030303030303
030303030403040E0F0F0E0E03030304070E0E0F0D0303040303030303030303030303030303
03030303030303030303020403030E0F0E0E0E03030304070F0F0E0D03030303030303030303
0303030303030303030303030303030303030303030E0E030303030303070D0E0E0F0E030303
030303030303030303030303030303030303030303030303030403030F0F0E0E0E0E03030E0F
0D04070E0E0704030303030303030303030303030303030303030303030303030403030E0E0E
0E0E0E03030E0D040304070E0E03040303030303030303030303030303030303030303030303
0304030404030303030303030404030303030303040303030303030303030303030303030303
0303030303030303040303030303030303030303030303030303030303030303030303030303
0303030303030303030303030303030303030605050505050505050506050505020403030303
0303030303030303030303030303030303030303030303030306000000000000000000000100
0109040303030303030303030303030303030303030303030303030303030303050000000000
0000000000000001090303030303030303030303030303030303030303030303030303030303
0305000000000000000000000000010904030303030303030303030303030303030303030303
0303030303040304060000000000000000000000000109030303030303030303030303030303
0303030303030303030303030303040501000000000000000000000006090303030303030303
0303030303030303030303030303030303030304030406000000000000000000000000010903
0303030303030303030303030303030303030303030303030303030304050100000000000000
0000000001090303030303030303030303030303030303030303030303030303030403040600
0000000000000000000000010903030303030303030303030303030303030303030303030303
0303040304060000000000000000000000000609030303030303030303030303030303030303
0303030303030303030403040600000000000000000000000000090303030303030303030303
0303040403030303030303030303030303030406000000000000000000000000060903030303
0303030303030303030901010704030303030303030303030304060000000000000000000000
00000A03030303030303030303030307010B0D00040303030303030303030303040505010501
06010106010105010602030303030303030303030309010B060A0D0107030303030303030303
03030907070707070707070707070707090303030303030303030309010C0801000B0B090303
0303030303030303030404030303040404040404040404040403030303030303030409060D01
0000060C01030303030303030304040404040303030304040304040303030303030303030303
040407000C06060606060A060904030303030303030403030303030303040304030403030303
03030303030303030408080D010608060A0A0B01030303030303030303030303030303030303
03030303030303030303030303030404010B0A00000000000A0E010303030303030303030303
0303030303030303030303030303030303030303030304050A0B000806060A0A0E0103030303
0303030303030303030303030303030303030303030303030303030303030A060D000606060C
0A0D000403030303030303030303030303030303030303030303030303030303030303030403
010D060000050A0B060804030303030303030303030303030303030303030303030303030303
0303030303030309060E01060A0A0D0107040303030303030303030303030303030303030303
030303030303030303030303030304010A0F0A0A0F0A02040303030303030303030303030303
030303030303030303030303030303030303030303040405080E0C0A05040303030303030303
0303030303030303030303030303030303030303030303030303030304040401010101070404
0303030303030303030303030303030303030303030303030303030303030303030304040404
0407090704040303030303030303030303030303030303030303030303030303030303030303
0303030303040404040404040404030303030303030303030303030303030303030303030303
0303030303030303030303030304040303030303030303030303030303030303030303030303
0303030303030303030303030303030303030303030303030303030303030303030303030303
0303030303030303030303030303030303030303030303030303030303030303030303030303
0303030303030303030303030303030303030303030303030303030303030303030303030303
0303030303030303030303

end
%%PageTrailer
%%Trailer
%%EOF
